//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReportesWH.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class siixsem_wh_monthly_reportsEntities1 : DbContext
    {
        public siixsem_wh_monthly_reportsEntities1()
            : base("name=siixsem_wh_monthly_reportsEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<siixsem_id_material> siixsem_id_material { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        public virtual ObjectResult<Nullable<int>> GetIDMaterial(Nullable<int> ds, Nullable<int> de)
        {
            var dsParameter = ds.HasValue ?
                new ObjectParameter("ds", ds) :
                new ObjectParameter("ds", typeof(int));
    
            var deParameter = de.HasValue ?
                new ObjectParameter("de", de) :
                new ObjectParameter("de", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetIDMaterial", dsParameter, deParameter);
        }
    
        public virtual int InsertIDMaterial(Nullable<int> id, string date, Nullable<int> id_m)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var id_mParameter = id_m.HasValue ?
                new ObjectParameter("id_m", id_m) :
                new ObjectParameter("id_m", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertIDMaterial", idParameter, dateParameter, id_mParameter);
        }
    }
}
